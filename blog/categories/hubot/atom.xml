<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hubot | Yucchiy's blog]]></title>
  <link href="http://blog.yucchiy.com/blog/categories/hubot/atom.xml" rel="self"/>
  <link href="http://blog.yucchiy.com/"/>
  <updated>2014-08-15T02:17:12+09:00</updated>
  <id>http://blog.yucchiy.com/</id>
  <author>
    <name><![CDATA[yucchiy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hubot+Herokuでbot入門+Slack連携]]></title>
    <link href="http://blog.yucchiy.com/2014/07/17/tutorial-hubot-slack-heroku/"/>
    <updated>2014-07-17T22:49:05+09:00</updated>
    <id>http://blog.yucchiy.com/2014/07/17/tutorial-hubot-slack-heroku</id>
    <content type="html"><![CDATA[<p>業務関係で少しHubotを触ったので, 備忘録代わりにブログに書いてみた.</p>

<h2>インストール</h2>

<p>以下の環境が必要になるので予めインストールする.</p>

<ul>
<li>Node.js, npm</li>
<li>CoffeeScript</li>
<li>Redis(データ永続化に必要. 必要に応じてインストールする)</li>
</ul>


<p>Macの場合は, HomeBrewでインストールするのが楽.</p>

<pre><code>brew install node redis-server
</code></pre>

<p><code>Hubot</code>は, npmからインストールできる.</p>

<pre><code>npm install -g coffee-script hubot
</code></pre>

<h2>Botを作成してみる</h2>

<pre><code>hubot --create mybot
cd mybot
npm install --save
</code></pre>

<h3>Gitでバージョン管理</h3>

<p>はじめから<code>.gitignore</code>が用意されているので, おもむろにInitial commit.</p>

<pre><code>cd mybot
git init
git add .
git commit -m "Initial commit."
</code></pre>

<h3>動作確認</h3>

<pre><code>./bin/hubot
Hubot&gt; hubot hi
Hubot&gt; hi
Hubot&gt; exit
</code></pre>

<h2>自作スクリプトを書く</h2>

<p><code>scripts</code>ディレクトリ以下にスクリプトを設置する.</p>

<h3>特定の文字列に反応してつぶやく</h3>

<p><code>robot.hear</code>を用いる. 第1引数に正規表現を, 第2引数に行いたい処理を関数で渡す.
この時関数に, <code>msg</code>オブジェクトが渡ってくるので, <code>msg.send</code>でBotを喋らせることができる.</p>

<p>以下, <code>hoge</code>とつぶやいたら<code>piyo</code>とつぶやくBotの例.</p>

<pre><code class="coffee">util = require 'util'↲
↲
module.exports = (robot) -&gt;↲
  robot.hear /hoge/i, (msg) -&gt;↲
    msg.send 'piyo'
</code></pre>

<h3>特定の時間につぶやく(Cron)</h3>

<p>node-cronモジュールを用いると, 簡単に定期実行処理をHubotに行わせることができる.
node-cronはnpmからインストールできる.</p>

<pre><code>npm install cron --save
</code></pre>

<p>以下, 日本時間の8時に, <code>おはよう朝だYo</code>とつぶやくスクリプト例.</p>

<pre><code class="coffee">cron = require('cron').CronJob
module.exports = (robot) -&gt;
  robot.enter -&gt;
  new cron
    cronTime: "0 0 8 * * *"
    start: true
    timeZone: "Asia/Tokyo"
    onTick: -&gt;
      robot.send {room: "#hogechannel"}, "おはよう朝だYo"
</code></pre>

<h3>環境変数の受け取り方</h3>

<p><code>process.env</code>を使う</p>

<h2>BotをHerokuで運用する</h2>

<p>Hubotは普通, そこまでサーバーのスペックを要求しないので(?)運用するには
Herokuが気軽で良いと判断し, Herokuをホスティングサーバーとしてみた.</p>

<p>まずHerokuを利用するの必要なツールをbrewインストールする.</p>

<pre><code>brew install heroku-toolbelt
</code></pre>

<h4>HerokuにHubotをデプロイ</h4>

<p><code>git push</code>でデプロイを行う.</p>

<pre><code>heroku create --stack cedar
git push heroku master
heroku addons:add rediscloud # Heroku上でVerifyしていないとエラー
heroku ps:scale web=1
</code></pre>

<h4>Herokuで運用してるHubotとSlackを連携</h4>

<p>まず, SlackのIntegrationsからHubot連携して, <code>HUBOT_SLACK_TOKEN</code>を控えておく.
次に, herokuコマンドで設定.</p>

<pre><code>heroku config:add HUBOT_SLACK_TOKEN=xxxx
heroku config:add HUBOT_SLACK_TEAM=yucchiy
heroku config:add HUBOT_SLACK_BOTNAME=yucchiy-bot
heroku config:add HEROKU_URL=http://yucchiy.herokuapp.com/
</code></pre>

<p>他にも, 監視チャンネルを制御する設定もある.</p>

<ul>
<li><code>HUBOT_SLACK_CHANNELMODE</code>

<ul>
<li>後述する, <code>HUBOT_SLACK_CHANNELS</code>と併用する. <code>whitelist</code>と<code>blacklist</code>が選択できる.</li>
</ul>
</li>
<li><code>HUBOT_SLACK_CHANNELMODE</code>

<ul>
<li>カンマ区切りでチャンネル名を指定する.</li>
<li><code>HUBOT_SLACK_CHANNELS</code>に<code>whiltelist</code>と指定すると, 指定したチャンネルのみを監視し, <code>blacklist</code>を指定すると, 指定したチャンネルは監視しないようになる</li>
</ul>
</li>
</ul>


<p>詳細は<a href="https://github.com/tinyspeck/hubot-slack">https://github.com/tinyspeck/hubot-slack</a>より確認できる.</p>

<p>次に, <code>Procfile</code>をslackのアダプタをロードするように変更する.</p>

<pre><code>web: bin/hubot --adapter slack
</code></pre>

<p>上記を設定の上, herokuのmasterブランチにデプロイすることで, slack連携が行われるようになる.</p>

<h2>参考URL</h2>

<ul>
<li><a href="http://hilott.hateblo.jp/entry/2012/07/09/004115">node.jsで環境変数を受け取る。herokuでの設定方法。</a></li>
<li><a href="http://sojiro14.github.io/blog/2014/04/19/irc-bot-by-hubot/">Hubotを使ったirc-bot作成メモ</a></li>
<li><a href="http://d.hatena.ne.jp/anatoo/20120204/1328368042">github社製ボットフレームワーク、hubotをIRCボットとして導入した話(修正あり</a></li>
<li><a href="http://nanapi.co.jp/blog/2014/06/04/slack_with_hubot/">Slack上のボットをHubotで作ってHerokuにデプロイしてみた</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
